import backend.model.Meal;
import backend.model.Recipe;
import java.sql.Timestamp;

global Double maxTimesEaten;

rule "AddDateToMeal"
    agenda-group "eatenMeals"
    when
        $m: Meal(mealTime == null)
    then
        $m.setMealTime(new Timestamp(System.currentTimeMillis()));
end

rule "RecipeEatenCounterUpdate"
    agenda-group "eatenMeals"
    when
        $m: Meal($recipe: recipe)
    then
        $recipe.setTimesEaten($recipe.getTimesEaten() + 1);
end

rule "Calculate rating" salience -1
    agenda-group "eatenMeals"
    when
        $m: Meal($recipe: recipe)
    then
        $recipe.setRating($recipe.getTimesEaten()/maxTimesEaten);
        System.out.println(maxTimesEaten);
        System.out.println($recipe.getName() + " " + $recipe.getTimesEaten() + " " + $recipe.getRating());
end

rule "Updating All Ratings"
    agenda-group "popularRecipe"
    no-loop
    when
        $recipe: Recipe()
    then
        $recipe.setRating($recipe.getTimesEaten()/maxTimesEaten);
        System.out.println($recipe.getName() + " " + $recipe.getTimesEaten() + " " + $recipe.getRating());
end